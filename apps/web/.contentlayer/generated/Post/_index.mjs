// NOTE This file is auto-generated by Contentlayer

import anchorCeramicsMdx from './anchor-ceramics.mdx.json' assert { type: 'json' }
import aphorismsForRememberingHowToSeeMdx from './aphorisms-for-remembering-how-to-see.mdx.json' assert { type: 'json' }
import aphorismsMdx from './aphorisms.mdx.json' assert { type: 'json' }
import aquibaMdx from './aquiba.mdx.json' assert { type: 'json' }
import breakaMdx from './breaka.mdx.json' assert { type: 'json' }
import bymanyMdx from './bymany.mdx.json' assert { type: 'json' }
import clearedMdx from './cleared.mdx.json' assert { type: 'json' }
import codePeopleAndFallibilityMdx from './code-people-and-fallibility.mdx.json' assert { type: 'json' }
import creativityStartsWithLoveAndTheftMdx from './creativity-starts-with-love-and-theft.mdx.json' assert { type: 'json' }
import designersShouldCodeMdx from './designers-should-code.mdx.json' assert { type: 'json' }
import doTheGridFinsStillFoldInMdx from './do-the-grid-fins-still-fold-in.mdx.json' assert { type: 'json' }
import edgeHillButchersMdx from './edge-hill-butchers.mdx.json' assert { type: 'json' }
import homeGistMdx from './home-gist.mdx.json' assert { type: 'json' }
import homeIntroMdx from './home-intro.mdx.json' assert { type: 'json' }
import iterationAndPrototypingMdx from './iteration-and-prototyping.mdx.json' assert { type: 'json' }
import johnBoydsBloodyMindednessMdx from './john-boyds-bloody-mindedness.mdx.json' assert { type: 'json' }
import kalaurieMdx from './kalaurie.mdx.json' assert { type: 'json' }
import notesOnDecipheringSunTzuMdx from './notes-on-deciphering-sun-tzu.mdx.json' assert { type: 'json' }
import practiceBoredomMdx from './practice-boredom.mdx.json' assert { type: 'json' }
import replierMdx from './replier.mdx.json' assert { type: 'json' }
import rulesForRecordCollectingMdx from './rules-for-record-collecting.mdx.json' assert { type: 'json' }
import shouldAllDecisionsBeUnanimousInABandMdx from './should-all-decisions-be-unanimous-in-a-band.mdx.json' assert { type: 'json' }
import studioRoundMdx from './studio-round.mdx.json' assert { type: 'json' }
import theFirstPrincipleMdx from './the-first-principle.mdx.json' assert { type: 'json' }
import theInstantaneousLanguageOfBeautyMdx from './the-instantaneous-language-of-beauty.mdx.json' assert { type: 'json' }
import theLibraryOfEconomicPossibilityMdx from './the-library-of-economic-possibility.mdx.json' assert { type: 'json' }
import theMatterOfTasteMdx from './the-matter-of-taste.mdx.json' assert { type: 'json' }
import vanaMdx from './vana.mdx.json' assert { type: 'json' }
import wanderWonderWunderMdx from './wander-wonder-wunder.mdx.json' assert { type: 'json' }
import waysToThinkAboutGenerativeAiMdx from './ways-to-think-about-generative-ai.mdx.json' assert { type: 'json' }

export const allPosts = [anchorCeramicsMdx, aphorismsForRememberingHowToSeeMdx, aphorismsMdx, aquibaMdx, breakaMdx, bymanyMdx, clearedMdx, codePeopleAndFallibilityMdx, creativityStartsWithLoveAndTheftMdx, designersShouldCodeMdx, doTheGridFinsStillFoldInMdx, edgeHillButchersMdx, homeGistMdx, homeIntroMdx, iterationAndPrototypingMdx, johnBoydsBloodyMindednessMdx, kalaurieMdx, notesOnDecipheringSunTzuMdx, practiceBoredomMdx, replierMdx, rulesForRecordCollectingMdx, shouldAllDecisionsBeUnanimousInABandMdx, studioRoundMdx, theFirstPrincipleMdx, theInstantaneousLanguageOfBeautyMdx, theLibraryOfEconomicPossibilityMdx, theMatterOfTasteMdx, vanaMdx, wanderWonderWunderMdx, waysToThinkAboutGenerativeAiMdx]
